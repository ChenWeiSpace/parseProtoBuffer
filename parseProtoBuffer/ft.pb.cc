// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ft.proto

#include "ft.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_ft_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_filed26_ft_2eproto;
namespace Console {
class filed26DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<filed26> _instance;
} _filed26_default_instance_;
class filed2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<filed2> _instance;
} _filed2_default_instance_;
class filed7DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<filed7> _instance;
} _filed7_default_instance_;
class topDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<top> _instance;
} _top_default_instance_;
}  // namespace Console
static void InitDefaultsfiled26_ft_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Console::_filed26_default_instance_;
    new (ptr) ::Console::filed26();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Console::filed26::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_filed26_ft_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsfiled26_ft_2eproto}, {}};

static void InitDefaultsfiled2_ft_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Console::_filed2_default_instance_;
    new (ptr) ::Console::filed2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Console::filed2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_filed2_ft_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsfiled2_ft_2eproto}, {
      &scc_info_filed26_ft_2eproto.base,}};

static void InitDefaultsfiled7_ft_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Console::_filed7_default_instance_;
    new (ptr) ::Console::filed7();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Console::filed7::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_filed7_ft_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsfiled7_ft_2eproto}, {}};

static void InitDefaultstop_ft_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Console::_top_default_instance_;
    new (ptr) ::Console::top();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Console::top::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_top_ft_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstop_ft_2eproto}, {}};

void InitDefaults_ft_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_filed26_ft_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_filed2_ft_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_filed7_ft_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_top_ft_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ft_2eproto[4];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_ft_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ft_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ft_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Console::filed26, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Console::filed26, f2_),
  PROTOBUF_FIELD_OFFSET(::Console::filed26, f3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Console::filed2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Console::filed2, f1_),
  PROTOBUF_FIELD_OFFSET(::Console::filed2, f3_),
  PROTOBUF_FIELD_OFFSET(::Console::filed2, f6_),
  PROTOBUF_FIELD_OFFSET(::Console::filed2, f7_),
  PROTOBUF_FIELD_OFFSET(::Console::filed2, f8_),
  PROTOBUF_FIELD_OFFSET(::Console::filed2, f11_),
  PROTOBUF_FIELD_OFFSET(::Console::filed2, f12_),
  PROTOBUF_FIELD_OFFSET(::Console::filed2, f13_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Console::filed7, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Console::filed7, f1_),
  PROTOBUF_FIELD_OFFSET(::Console::filed7, f2_),
  PROTOBUF_FIELD_OFFSET(::Console::filed7, f3_),
  PROTOBUF_FIELD_OFFSET(::Console::filed7, f11_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Console::top, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Console::top, f1_),
  PROTOBUF_FIELD_OFFSET(::Console::top, f3_),
  PROTOBUF_FIELD_OFFSET(::Console::top, f5_),
  PROTOBUF_FIELD_OFFSET(::Console::top, f8_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Console::filed26)},
  { 7, -1, sizeof(::Console::filed2)},
  { 20, -1, sizeof(::Console::filed7)},
  { 29, -1, sizeof(::Console::top)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Console::_filed26_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Console::_filed2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Console::_filed7_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Console::_top_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ft_2eproto = {
  {}, AddDescriptors_ft_2eproto, "ft.proto", schemas,
  file_default_instances, TableStruct_ft_2eproto::offsets,
  file_level_metadata_ft_2eproto, 4, file_level_enum_descriptors_ft_2eproto, file_level_service_descriptors_ft_2eproto,
};

const char descriptor_table_protodef_ft_2eproto[] =
  "\n\010ft.proto\022\007Console\"!\n\007filed26\022\n\n\002f2\030\002 \001"
  "(\005\022\n\n\002f3\030\004 \001(\005\"}\n\006filed2\022\n\n\002f1\030\001 \003(\r\022\n\n\002"
  "f3\030\003 \003(\r\022\034\n\002f6\030\006 \001(\0132\020.Console.filed26\022\n"
  "\n\002f7\030\007 \003(\r\022\n\n\002f8\030\010 \003(\021\022\013\n\003f11\030\013 \003(\002\022\013\n\003f"
  "12\030\014 \001(\r\022\013\n\003f13\030\r \003(\r\"9\n\006filed7\022\n\n\002f1\030\001 "
  "\003(\r\022\n\n\002f2\030\003 \003(\r\022\n\n\002f3\030\010 \003(\r\022\013\n\003f11\030\013 \003(\r"
  "\"5\n\003top\022\n\n\002f1\030\001 \003(\001\022\n\n\002f3\030\003 \003(\022\022\n\n\002f5\030\005 "
  "\003(\001\022\n\n\002f8\030\010 \003(\rb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_ft_2eproto = {
  false, InitDefaults_ft_2eproto, 
  descriptor_table_protodef_ft_2eproto,
  "ft.proto", &assign_descriptors_table_ft_2eproto, 303,
};

void AddDescriptors_ft_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ft_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ft_2eproto = []() { AddDescriptors_ft_2eproto(); return true; }();
namespace Console {

// ===================================================================

void filed26::InitAsDefaultInstance() {
}
class filed26::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int filed26::kF2FieldNumber;
const int filed26::kF3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

filed26::filed26()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Console.filed26)
}
filed26::filed26(const filed26& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&f2_, &from.f2_,
    static_cast<size_t>(reinterpret_cast<char*>(&f3_) -
    reinterpret_cast<char*>(&f2_)) + sizeof(f3_));
  // @@protoc_insertion_point(copy_constructor:Console.filed26)
}

void filed26::SharedCtor() {
  ::memset(&f2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&f3_) -
      reinterpret_cast<char*>(&f2_)) + sizeof(f3_));
}

filed26::~filed26() {
  // @@protoc_insertion_point(destructor:Console.filed26)
  SharedDtor();
}

void filed26::SharedDtor() {
}

void filed26::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const filed26& filed26::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_filed26_ft_2eproto.base);
  return *internal_default_instance();
}


void filed26::Clear() {
// @@protoc_insertion_point(message_clear_start:Console.filed26)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&f2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&f3_) -
      reinterpret_cast<char*>(&f2_)) + sizeof(f3_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* filed26::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<filed26*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 f2 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_f2(value);
        break;
      }
      // int32 f3 = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_f3(value);
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool filed26::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Console.filed26)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 f2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &f2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 f3 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &f3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Console.filed26)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Console.filed26)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void filed26::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Console.filed26)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 f2 = 2;
  if (this->f2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->f2(), output);
  }

  // int32 f3 = 4;
  if (this->f3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->f3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Console.filed26)
}

::google::protobuf::uint8* filed26::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Console.filed26)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 f2 = 2;
  if (this->f2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->f2(), target);
  }

  // int32 f3 = 4;
  if (this->f3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->f3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Console.filed26)
  return target;
}

size_t filed26::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Console.filed26)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 f2 = 2;
  if (this->f2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f2());
  }

  // int32 f3 = 4;
  if (this->f3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f3());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void filed26::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Console.filed26)
  GOOGLE_DCHECK_NE(&from, this);
  const filed26* source =
      ::google::protobuf::DynamicCastToGenerated<filed26>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Console.filed26)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Console.filed26)
    MergeFrom(*source);
  }
}

void filed26::MergeFrom(const filed26& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Console.filed26)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.f2() != 0) {
    set_f2(from.f2());
  }
  if (from.f3() != 0) {
    set_f3(from.f3());
  }
}

void filed26::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Console.filed26)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void filed26::CopyFrom(const filed26& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Console.filed26)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool filed26::IsInitialized() const {
  return true;
}

void filed26::Swap(filed26* other) {
  if (other == this) return;
  InternalSwap(other);
}
void filed26::InternalSwap(filed26* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(f2_, other->f2_);
  swap(f3_, other->f3_);
}

::google::protobuf::Metadata filed26::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ft_2eproto);
  return ::file_level_metadata_ft_2eproto[kIndexInFileMessages];
}


// ===================================================================

void filed2::InitAsDefaultInstance() {
  ::Console::_filed2_default_instance_._instance.get_mutable()->f6_ = const_cast< ::Console::filed26*>(
      ::Console::filed26::internal_default_instance());
}
class filed2::HasBitSetters {
 public:
  static const ::Console::filed26& f6(const filed2* msg);
};

const ::Console::filed26&
filed2::HasBitSetters::f6(const filed2* msg) {
  return *msg->f6_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int filed2::kF1FieldNumber;
const int filed2::kF3FieldNumber;
const int filed2::kF6FieldNumber;
const int filed2::kF7FieldNumber;
const int filed2::kF8FieldNumber;
const int filed2::kF11FieldNumber;
const int filed2::kF12FieldNumber;
const int filed2::kF13FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

filed2::filed2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Console.filed2)
}
filed2::filed2(const filed2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      f1_(from.f1_),
      f3_(from.f3_),
      f7_(from.f7_),
      f8_(from.f8_),
      f11_(from.f11_),
      f13_(from.f13_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_f6()) {
    f6_ = new ::Console::filed26(*from.f6_);
  } else {
    f6_ = NULL;
  }
  f12_ = from.f12_;
  // @@protoc_insertion_point(copy_constructor:Console.filed2)
}

void filed2::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_filed2_ft_2eproto.base);
  ::memset(&f6_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&f12_) -
      reinterpret_cast<char*>(&f6_)) + sizeof(f12_));
}

filed2::~filed2() {
  // @@protoc_insertion_point(destructor:Console.filed2)
  SharedDtor();
}

void filed2::SharedDtor() {
  if (this != internal_default_instance()) delete f6_;
}

void filed2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const filed2& filed2::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_filed2_ft_2eproto.base);
  return *internal_default_instance();
}


void filed2::Clear() {
// @@protoc_insertion_point(message_clear_start:Console.filed2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  f1_.Clear();
  f3_.Clear();
  f7_.Clear();
  f8_.Clear();
  f11_.Clear();
  f13_.Clear();
  if (GetArenaNoVirtual() == NULL && f6_ != NULL) {
    delete f6_;
  }
  f6_ = NULL;
  f12_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* filed2::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<filed2*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 f1 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 10) {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_f1();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val;
          ptr = Varint::Parse64(ptr, &val);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ::google::protobuf::uint32 value = val;
          msg->add_f1(value);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
        break;
      }
      // repeated uint32 f3 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 26) {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_f3();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val;
          ptr = Varint::Parse64(ptr, &val);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ::google::protobuf::uint32 value = val;
          msg->add_f3(value);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
        break;
      }
      // .Console.filed26 f6 = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = Varint::Parse32Inline(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::Console::filed26::_InternalParse;
        object = msg->mutable_f6();
        if (size > end - ptr) goto len_delim_till_end;
        auto newend = ptr + size;
        bool ok = ctx->ParseExactRange({parser_till_end, object},
                                       ptr, newend);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ok);
        ptr = newend;
        break;
      }
      // repeated uint32 f7 = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) == 58) {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_f7();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val;
          ptr = Varint::Parse64(ptr, &val);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ::google::protobuf::uint32 value = val;
          msg->add_f7(value);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 56 && (ptr += 1));
        break;
      }
      // repeated sint32 f8 = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) == 66) {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedSInt32Parser;
          object = msg->mutable_f8();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val;
          ptr = Varint::Parse64(ptr, &val);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ::google::protobuf::int32 value = ::google::protobuf::internal::WireFormatLite::ZigZagDecode64(val);
          msg->add_f8(value);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 64 && (ptr += 1));
        break;
      }
      // repeated float f11 = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) == 90) {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedFloatParser;
          object = msg->mutable_f11();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 93) goto handle_unusual;
        do {
          float val;
          std::memcpy(&val, ptr, 4);
          ptr += 4;
          msg->add_f11(val);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 93 && (ptr += 1));
        break;
      }
      // uint32 f12 = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 96) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = Varint::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::uint32 value = val;
        msg->set_f12(value);
        break;
      }
      // repeated uint32 f13 = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) == 106) {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_f13();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 104) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val;
          ptr = Varint::Parse64(ptr, &val);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ::google::protobuf::uint32 value = val;
          msg->add_f13(value);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 104 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool filed2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Console.filed2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 f1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_f1())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_f1())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 f3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_f3())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_f3())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Console.filed26 f6 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_f6()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 f7 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_f7())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58u, input, this->mutable_f7())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 f8 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_f8())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 66u, input, this->mutable_f8())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float f11 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_f11())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (93 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 90u, input, this->mutable_f11())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 f12 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (96 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &f12_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 f13 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_f13())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (104 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 106u, input, this->mutable_f13())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Console.filed2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Console.filed2)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void filed2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Console.filed2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 f1 = 1;
  if (this->f1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f1_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->f1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->f1(i), output);
  }

  // repeated uint32 f3 = 3;
  if (this->f3_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f3_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->f3_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->f3(i), output);
  }

  // .Console.filed26 f6 = 6;
  if (this->has_f6()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::f6(this), output);
  }

  // repeated uint32 f7 = 7;
  if (this->f7_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f7_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->f7_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->f7(i), output);
  }

  // repeated sint32 f8 = 8;
  if (this->f8_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f8_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->f8_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->f8(i), output);
  }

  // repeated float f11 = 11;
  if (this->f11_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f11_cached_byte_size_.load(
        std::memory_order_relaxed));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->f11().data(), this->f11_size(), output);
  }

  // uint32 f12 = 12;
  if (this->f12() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->f12(), output);
  }

  // repeated uint32 f13 = 13;
  if (this->f13_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f13_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->f13_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->f13(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Console.filed2)
}

::google::protobuf::uint8* filed2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Console.filed2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 f1 = 1;
  if (this->f1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _f1_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->f1_, target);
  }

  // repeated uint32 f3 = 3;
  if (this->f3_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _f3_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->f3_, target);
  }

  // .Console.filed26 f6 = 6;
  if (this->has_f6()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::f6(this), deterministic, target);
  }

  // repeated uint32 f7 = 7;
  if (this->f7_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _f7_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->f7_, target);
  }

  // repeated sint32 f8 = 8;
  if (this->f8_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _f8_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->f8_, target);
  }

  // repeated float f11 = 11;
  if (this->f11_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _f11_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->f11_, target);
  }

  // uint32 f12 = 12;
  if (this->f12() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->f12(), target);
  }

  // repeated uint32 f13 = 13;
  if (this->f13_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _f13_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->f13_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Console.filed2)
  return target;
}

size_t filed2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Console.filed2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 f1 = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->f1_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _f1_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 f3 = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->f3_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _f3_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 f7 = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->f7_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _f7_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated sint32 f8 = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->f8_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _f8_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated float f11 = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->f11_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _f11_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 f13 = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->f13_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _f13_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .Console.filed26 f6 = 6;
  if (this->has_f6()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *f6_);
  }

  // uint32 f12 = 12;
  if (this->f12() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->f12());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void filed2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Console.filed2)
  GOOGLE_DCHECK_NE(&from, this);
  const filed2* source =
      ::google::protobuf::DynamicCastToGenerated<filed2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Console.filed2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Console.filed2)
    MergeFrom(*source);
  }
}

void filed2::MergeFrom(const filed2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Console.filed2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  f1_.MergeFrom(from.f1_);
  f3_.MergeFrom(from.f3_);
  f7_.MergeFrom(from.f7_);
  f8_.MergeFrom(from.f8_);
  f11_.MergeFrom(from.f11_);
  f13_.MergeFrom(from.f13_);
  if (from.has_f6()) {
    mutable_f6()->::Console::filed26::MergeFrom(from.f6());
  }
  if (from.f12() != 0) {
    set_f12(from.f12());
  }
}

void filed2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Console.filed2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void filed2::CopyFrom(const filed2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Console.filed2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool filed2::IsInitialized() const {
  return true;
}

void filed2::Swap(filed2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void filed2::InternalSwap(filed2* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  f1_.InternalSwap(&other->f1_);
  f3_.InternalSwap(&other->f3_);
  f7_.InternalSwap(&other->f7_);
  f8_.InternalSwap(&other->f8_);
  f11_.InternalSwap(&other->f11_);
  f13_.InternalSwap(&other->f13_);
  swap(f6_, other->f6_);
  swap(f12_, other->f12_);
}

::google::protobuf::Metadata filed2::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ft_2eproto);
  return ::file_level_metadata_ft_2eproto[kIndexInFileMessages];
}


// ===================================================================

void filed7::InitAsDefaultInstance() {
}
class filed7::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int filed7::kF1FieldNumber;
const int filed7::kF2FieldNumber;
const int filed7::kF3FieldNumber;
const int filed7::kF11FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

filed7::filed7()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Console.filed7)
}
filed7::filed7(const filed7& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      f1_(from.f1_),
      f2_(from.f2_),
      f3_(from.f3_),
      f11_(from.f11_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Console.filed7)
}

void filed7::SharedCtor() {
}

filed7::~filed7() {
  // @@protoc_insertion_point(destructor:Console.filed7)
  SharedDtor();
}

void filed7::SharedDtor() {
}

void filed7::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const filed7& filed7::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_filed7_ft_2eproto.base);
  return *internal_default_instance();
}


void filed7::Clear() {
// @@protoc_insertion_point(message_clear_start:Console.filed7)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  f1_.Clear();
  f2_.Clear();
  f3_.Clear();
  f11_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* filed7::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<filed7*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated uint32 f1 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 10) {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_f1();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val;
          ptr = Varint::Parse64(ptr, &val);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ::google::protobuf::uint32 value = val;
          msg->add_f1(value);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 8 && (ptr += 1));
        break;
      }
      // repeated uint32 f2 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 26) {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_f2();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val;
          ptr = Varint::Parse64(ptr, &val);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ::google::protobuf::uint32 value = val;
          msg->add_f2(value);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
        break;
      }
      // repeated uint32 f3 = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) == 66) {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_f3();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val;
          ptr = Varint::Parse64(ptr, &val);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ::google::protobuf::uint32 value = val;
          msg->add_f3(value);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 64 && (ptr += 1));
        break;
      }
      // repeated uint32 f11 = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) == 90) {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_f11();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 88) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val;
          ptr = Varint::Parse64(ptr, &val);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ::google::protobuf::uint32 value = val;
          msg->add_f11(value);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 88 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool filed7::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Console.filed7)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 f1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_f1())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_f1())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 f2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_f2())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_f2())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 f3 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_f3())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_f3())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 f11 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_f11())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (88 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable_f11())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Console.filed7)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Console.filed7)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void filed7::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Console.filed7)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 f1 = 1;
  if (this->f1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f1_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->f1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->f1(i), output);
  }

  // repeated uint32 f2 = 3;
  if (this->f2_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f2_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->f2_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->f2(i), output);
  }

  // repeated uint32 f3 = 8;
  if (this->f3_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f3_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->f3_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->f3(i), output);
  }

  // repeated uint32 f11 = 11;
  if (this->f11_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f11_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->f11_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->f11(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Console.filed7)
}

::google::protobuf::uint8* filed7::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Console.filed7)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 f1 = 1;
  if (this->f1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _f1_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->f1_, target);
  }

  // repeated uint32 f2 = 3;
  if (this->f2_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _f2_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->f2_, target);
  }

  // repeated uint32 f3 = 8;
  if (this->f3_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _f3_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->f3_, target);
  }

  // repeated uint32 f11 = 11;
  if (this->f11_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _f11_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->f11_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Console.filed7)
  return target;
}

size_t filed7::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Console.filed7)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 f1 = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->f1_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _f1_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 f2 = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->f2_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _f2_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 f3 = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->f3_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _f3_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 f11 = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->f11_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _f11_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void filed7::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Console.filed7)
  GOOGLE_DCHECK_NE(&from, this);
  const filed7* source =
      ::google::protobuf::DynamicCastToGenerated<filed7>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Console.filed7)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Console.filed7)
    MergeFrom(*source);
  }
}

void filed7::MergeFrom(const filed7& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Console.filed7)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  f1_.MergeFrom(from.f1_);
  f2_.MergeFrom(from.f2_);
  f3_.MergeFrom(from.f3_);
  f11_.MergeFrom(from.f11_);
}

void filed7::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Console.filed7)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void filed7::CopyFrom(const filed7& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Console.filed7)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool filed7::IsInitialized() const {
  return true;
}

void filed7::Swap(filed7* other) {
  if (other == this) return;
  InternalSwap(other);
}
void filed7::InternalSwap(filed7* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  f1_.InternalSwap(&other->f1_);
  f2_.InternalSwap(&other->f2_);
  f3_.InternalSwap(&other->f3_);
  f11_.InternalSwap(&other->f11_);
}

::google::protobuf::Metadata filed7::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ft_2eproto);
  return ::file_level_metadata_ft_2eproto[kIndexInFileMessages];
}


// ===================================================================

void top::InitAsDefaultInstance() {
}
class top::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int top::kF1FieldNumber;
const int top::kF3FieldNumber;
const int top::kF5FieldNumber;
const int top::kF8FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

top::top()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Console.top)
}
top::top(const top& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      f1_(from.f1_),
      f3_(from.f3_),
      f5_(from.f5_),
      f8_(from.f8_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Console.top)
}

void top::SharedCtor() {
}

top::~top() {
  // @@protoc_insertion_point(destructor:Console.top)
  SharedDtor();
}

void top::SharedDtor() {
}

void top::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const top& top::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_top_ft_2eproto.base);
  return *internal_default_instance();
}


void top::Clear() {
// @@protoc_insertion_point(message_clear_start:Console.top)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  f1_.Clear();
  f3_.Clear();
  f5_.Clear();
  f8_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* top::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<top*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = Varint::Parse32Inline(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated double f1 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) == 10) {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedDoubleParser;
          object = msg->mutable_f1();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        do {
          double val;
          ::std::memcpy(&val, ptr, 8);
          ptr += 8;
          msg->add_f1(val);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 9 && (ptr += 1));
        break;
      }
      // repeated sint64 f3 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 26) {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedSInt64Parser;
          object = msg->mutable_f3();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val;
          ptr = Varint::Parse64(ptr, &val);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ::google::protobuf::int64 value = ::google::protobuf::internal::WireFormatLite::ZigZagDecode64(val);
          msg->add_f3(value);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
        break;
      }
      // repeated double f5 = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) == 42) {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedDoubleParser;
          object = msg->mutable_f5();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 41) goto handle_unusual;
        do {
          double val;
          ::std::memcpy(&val, ptr, 8);
          ptr += 8;
          msg->add_f5(val);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 41 && (ptr += 1));
        break;
      }
      // repeated uint32 f8 = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) == 66) {
          ptr = Varint::Parse32Inline(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt32Parser;
          object = msg->mutable_f8();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val;
          ptr = Varint::Parse64(ptr, &val);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ::google::protobuf::uint32 value = val;
          msg->add_f8(value);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 64 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual: (void)&&handle_unusual;
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end: (void)&&len_delim_till_end;
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                                 {parser_till_end, object}, size);
group_continues: (void)&&group_continues;
  GOOGLE_DCHECK(ptr >= end);
  GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->StoreGroup({_InternalParse, msg}, {parser_till_end, object}, depth, tag));
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool top::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Console.top)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double f1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_f1())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_f1())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 f3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_f3())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 26u, input, this->mutable_f3())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double f5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_f5())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (41 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 42u, input, this->mutable_f5())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 f8 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_f8())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_f8())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Console.top)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Console.top)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void top::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Console.top)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double f1 = 1;
  if (this->f1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f1_cached_byte_size_.load(
        std::memory_order_relaxed));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->f1().data(), this->f1_size(), output);
  }

  // repeated sint64 f3 = 3;
  if (this->f3_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f3_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->f3_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->f3(i), output);
  }

  // repeated double f5 = 5;
  if (this->f5_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f5_cached_byte_size_.load(
        std::memory_order_relaxed));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->f5().data(), this->f5_size(), output);
  }

  // repeated uint32 f8 = 8;
  if (this->f8_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_f8_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->f8_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->f8(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Console.top)
}

::google::protobuf::uint8* top::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Console.top)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double f1 = 1;
  if (this->f1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _f1_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->f1_, target);
  }

  // repeated sint64 f3 = 3;
  if (this->f3_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _f3_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->f3_, target);
  }

  // repeated double f5 = 5;
  if (this->f5_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _f5_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->f5_, target);
  }

  // repeated uint32 f8 = 8;
  if (this->f8_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _f8_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->f8_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Console.top)
  return target;
}

size_t top::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Console.top)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double f1 = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->f1_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _f1_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated sint64 f3 = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->f3_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _f3_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated double f5 = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->f5_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _f5_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 f8 = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->f8_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _f8_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void top::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Console.top)
  GOOGLE_DCHECK_NE(&from, this);
  const top* source =
      ::google::protobuf::DynamicCastToGenerated<top>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Console.top)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Console.top)
    MergeFrom(*source);
  }
}

void top::MergeFrom(const top& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Console.top)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  f1_.MergeFrom(from.f1_);
  f3_.MergeFrom(from.f3_);
  f5_.MergeFrom(from.f5_);
  f8_.MergeFrom(from.f8_);
}

void top::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Console.top)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void top::CopyFrom(const top& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Console.top)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool top::IsInitialized() const {
  return true;
}

void top::Swap(top* other) {
  if (other == this) return;
  InternalSwap(other);
}
void top::InternalSwap(top* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  f1_.InternalSwap(&other->f1_);
  f3_.InternalSwap(&other->f3_);
  f5_.InternalSwap(&other->f5_);
  f8_.InternalSwap(&other->f8_);
}

::google::protobuf::Metadata top::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ft_2eproto);
  return ::file_level_metadata_ft_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Console
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::Console::filed26* Arena::CreateMaybeMessage< ::Console::filed26 >(Arena* arena) {
  return Arena::CreateInternal< ::Console::filed26 >(arena);
}
template<> PROTOBUF_NOINLINE ::Console::filed2* Arena::CreateMaybeMessage< ::Console::filed2 >(Arena* arena) {
  return Arena::CreateInternal< ::Console::filed2 >(arena);
}
template<> PROTOBUF_NOINLINE ::Console::filed7* Arena::CreateMaybeMessage< ::Console::filed7 >(Arena* arena) {
  return Arena::CreateInternal< ::Console::filed7 >(arena);
}
template<> PROTOBUF_NOINLINE ::Console::top* Arena::CreateMaybeMessage< ::Console::top >(Arena* arena) {
  return Arena::CreateInternal< ::Console::top >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
